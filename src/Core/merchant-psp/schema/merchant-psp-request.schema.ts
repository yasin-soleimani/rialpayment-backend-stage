import * as mongoose from 'mongoose';
import * as mongoosePaginate from 'mongoose-paginate';

export const MerchantPspRequestSchema = new mongoose.Schema(
  {
    user: { type: mongoose.SchemaTypes.ObjectId, ref: 'User' },
    type: { type: Number },
    customer: { type: mongoose.SchemaTypes.ObjectId, ref: '' },
    accountNumber: { type: String },
    activityLicenseNumberReferenceName: { type: String },
    branchCode: { type: String },
    mainCustomerId: { type: Number },
    rentEndingDate: { type: Date },
    rentContractNo: { type: String },
    workTitle: { type: String },
    workTitleEn: { type: String },
    phoneNumber: { type: String },
    postalCode: { type: String },
    projectId: { type: Number },
    switchId: { type: Number },
    portType: { type: String },
    posType: { type: String },
    posModel: { type: String },
    shaparakAddressText: { type: String },
    cityShaparakCode: { type: String },
    cityZone: { type: String },
    bankId: { type: Number },
    guildSupplementaryCode: { type: String },
    owneringTypeID: { type: Number },
    accountShabaCode: { type: String },
    activityLicenseNumber: { type: String },
    businessLicenseEndDate: { type: Date },
    taxPayerCode: { type: String },
    howToAssignID: { type: String },
    trustKind: { type: String },
    trustNumber: { type: String },
    cashTrustRRN: { type: String },
    buyingDeviceByCustomerStatus: { type: String },
    workTypeId: { type: String },
    mobileGPRS: { type: String },
    RequestMerchantDocument: [{ documentTypeId: Number }, { documentAttachment: { type: String } }],
    followUpCode: { type: String },
    terminalId: { type: String },
    boundId: { type: mongoose.Types.ObjectId, ref: 'MerchantPspPos' },
    middleCity: { type: String },
    workFlowCaption: { type: String },
    res: [{ type: String }],
    mobile: { type: String },
    merchant: { type: mongoose.Types.ObjectId, ref: 'MerchantPspCustomer' },
    savedId: { type: String },
  },
  { timestamps: true }
);

MerchantPspRequestSchema.plugin(mongoosePaginate);
